// Generated by CoffeeScript 1.3.3
(function() {
  var dates;

  dates = {
    "2012-03-18": [["Calendar to the right.", "/2012/03/18/calendar-to-the-right.html"]],
    "2012-07-07": [["Deploying meteor application to jit...", "/2012/07/07/deploying-meteor-application-to-jit.su.html"]],
    "2012-07-17": [["Using passport with flatiron (or - ...", "/2012/07/17/using-passport-with-flatiron.html"]]
  };

  jQuery.datepicker.oldAdjustDate = jQuery.datepicker._adjustDate;

  jQuery.datepicker._adjustDate = function(id, offset, period) {
    jQuery.datepicker.oldAdjustDate(id, offset, period);
    return this._notifyChange(this._getInst($(id)[0]));
  };

  jQuery.datepicker.oldSelectDate = jQuery.datepicker._selectDate;

  jQuery.datepicker._selectDate = function(id, dateStr) {
    jQuery.datepicker.oldSelectDate(id, dateStr);
    return this._notifyChange(this._getInst($(id)[0]));
  };

  $(document).ready(function() {
    var arrowsWidth, callback, options;
    options = {
      duration: 'medium',
      easing: 'easeOutQuart'
    };
    arrowsWidth = function() {
      var $title, width;
      $title = $(".ui-datepicker-title");
      width = (252 - parseInt($title.css('width'))) / 2;
      $(".ui-datepicker-next, .ui-datepicker-prev").width(width);
      return $title.css('display', 'block');
    };
    callback = function($base, dateText) {
      var $href, date, v, _i, _len, _ref, _ref1;
      $base.empty();
      date = dateText.split('/').reverse();
      _ref = [date[2], date[1]], date[1] = _ref[0], date[2] = _ref[1];
      _ref1 = dates[date.join('-')];
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        v = _ref1[_i];
        $href = $("<a class='event' href='#" + v[1] + "'>").text(v[0]);
        $href.bind('click', {
          url: v[1]
        }, function(event) {
          return ajax(event.data.url);
        });
        $base.append($href);
      }
      $base.css('bottom', $("#calendar").css('height'));
      $base.css({
        top: 'auto',
        bottom: $("#calendar").css('height')
      });
      $base.attr('id', 'events_cal');
      options['direction'] = 'down';
      return $base.toggle('slide', options);
    };
    $("#calendar").datepicker({
      showOtherMonths: true,
      selectOtherMonths: true,
      beforeShowDay: function(date) {
        var d, _;
        for (d in dates) {
          _ = dates[d];
          if (new Date(Date.parse(d)).setHours(0, 0, 0, 0) === date.setHours(0, 0, 0, 0)) {
            return [true, ''];
          }
        }
        return [false, ''];
      },
      onSelect: function(dateText, inst) {
        var $base;
        $base = $(".events");
        if ($base.css('display') !== 'none') {
          if ($base.children('a').hasClass('tag')) {
            options['direction'] = 'up';
          }
          return $base.toggle('slide', options, function() {
            return callback($base, dateText);
          });
        } else {
          return callback($base, dateText);
        }
      },
      onChangeMonthYear: function(year, month, inst) {
        var $base;
        $base = $(".events");
        if ($base.css('display') !== 'none' && $base.children('a').hasClass('event')) {
          $base.css('bottom', parseInt($("#calendar").css('height')) + 5);
        }
        return arrowsWidth();
      }
    });
    return arrowsWidth();
  });

}).call(this);
